#!/bin/sh

WORKSPACE=${CI_PROJECT_DIR}
source $WORKSPACE/env/$env.properties

echo "Loaded environment variables:"
echo "CLUSTER_NAME=$CLUSTER_NAME"
#VAULT_NAMESPACE=$VAULT_NAMESPACE
echo "VAULT_ROLE=$VAULT_ROLE"
echo "SERVICE_ACCOUNT_NAME=$SERVICE_ACCOUNT_NAME"
echo "VAULT_ADDRESS=$VAULT_ADDRESS"

echo "Integrating Vault for $CLUSTER_NAME in $env"
echo "---------------------------------------------------"

export AWS_PROFILE="VAULT_PROPERTIES_TEMP_PROFILE"

get_cluster_info() {

    echo "Get cluster details"
    echo "Cluster name: $CLUSTER_NAME"
    kubectl config current-context

    echo "---------------------------------------------------"

    echo "Create service account $SERVICE_ACCOUNT_NAME"
    kubectl create serviceaccount $SERVICE_ACCOUNT_NAME

    RBAC=$WORKSPACE/rbac.yaml
    sed -i "s|{{service_account_name}}|$SERVICE_ACCOUNT_NAME|g" $RBAC
    echo "RBAC YAML"
    cat $RBAC
    echo "Applying RBAC"
#    kubectl apply -f $RBAC

    echo "Get secret for service account"
    SECRET_NAME=$(kubectl get sa $SERVICE_ACCOUNT_NAME --output jsonpath="{.secrets[*]['name']}")
    echo "SECRET_NAME $SECRET_NAME"

    echo "Get JWT token"
    SA_JWT_TOKEN=$(kubectl get secret $SECRET_NAME --output 'go-template={{ .data.token }}' | base64 --decode)
    echo "SA_JWT_TOKEN $SA_JWT_TOKEN"

    echo "Get cluster certificate"
    SA_CA_CRT=$(kubectl config view --raw --minify --flatten --output 'jsonpath={.clusters[].cluster.certificate-authority-data}' | base64 --decode) 
    echo "SA_CA_CRT"
    echo $SA_CA_CRT

    echo "Get K8S host url"
    K8S_HOST=$(kubectl config view --raw --minify --flatten --output 'jsonpath={.clusters[].cluster.server}')
    echo "K8S_HOST $K8S_HOST"
    setup_vault
}

setup_vault() {
    echo "vault_namespace=$VAULT_NAMESPACE"
    #echo "vault_role=$VAULT_ROLE"
    #echo "service_account_name=$SERVICE_ACCOUNT_NAME"
    #echo "vault_address=$VAULT_ADDRESS"
    sudo su - ssm-user -c '
    set -x
    echo "Running as user: $(whoami)"
    echo "vault_namespace=$VAULT_NAMESPACE"
    echo "Environment Variables:"
    #env | grep VAULT
    aws sts get-caller-identity
    export VAULT_ADDR=$VAULT_ADDRESS
    export VAULT_NAMESPACE=$VAULT_NAMESPACE
    echo "Attempting Vault login..."
    vault login -method=aws role=$VAULT_ROLE
    set +x
    '

   # vault policy write nsl-core-$env-secrets-read-policy - <<EOF
   # path "secret/*" {
   # capabilities = ["read", "list"]
   # } EOF

   # vault auth enable kubernetes

   # vault write auth/kubernetes/config token_reviewer_jwt="$SA_JWT_TOKEN" kubernetes_host="$K8S_HOST"    kubernetes_ca_cert="$SA_CA_CRT"    issuer="https://kubernetes.default.svc.cluster.local"

   # vault write auth/kubernetes/role/nsl-core-vault-auth-role-$env \ 
   # bound_service_account_names=$SERVICE_ACCOUNT_NAME \
   # bound_service_account_namespaces=default \
   # policies=nsl-core-$env-secrets-read-policy \
   # ttl=24h

}

get_cluster_info


have added VAULT_PROPERTIES_TEMP_PROFILE in aws config. how to use it in the script?
